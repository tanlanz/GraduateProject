#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GraduateProject")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertPicture(Picture instance);
  partial void UpdatePicture(Picture instance);
  partial void DeletePicture(Picture instance);
  partial void InsertUsers(Users instance);
  partial void UpdateUsers(Users instance);
  partial void DeleteUsers(Users instance);
  partial void InsertProject_content(Project_content instance);
  partial void UpdateProject_content(Project_content instance);
  partial void DeleteProject_content(Project_content instance);
  partial void InsertProject_funds(Project_funds instance);
  partial void UpdateProject_funds(Project_funds instance);
  partial void DeleteProject_funds(Project_funds instance);
  partial void InsertProject_join(Project_join instance);
  partial void UpdateProject_join(Project_join instance);
  partial void DeleteProject_join(Project_join instance);
  partial void InsertProject_review(Project_review instance);
  partial void UpdateProject_review(Project_review instance);
  partial void DeleteProject_review(Project_review instance);
  partial void InsertProject_sort(Project_sort instance);
  partial void UpdateProject_sort(Project_sort instance);
  partial void DeleteProject_sort(Project_sort instance);
  partial void InsertProject_status(Project_status instance);
  partial void UpdateProject_status(Project_status instance);
  partial void DeleteProject_status(Project_status instance);
  partial void InsertStatus(Status instance);
  partial void UpdateStatus(Status instance);
  partial void DeleteStatus(Status instance);
  partial void InsertUserInfo(UserInfo instance);
  partial void UpdateUserInfo(UserInfo instance);
  partial void DeleteUserInfo(UserInfo instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GraduateProjectConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Picture> Picture
	{
		get
		{
			return this.GetTable<Picture>();
		}
	}
	
	public System.Data.Linq.Table<Users> Users
	{
		get
		{
			return this.GetTable<Users>();
		}
	}
	
	public System.Data.Linq.Table<Project_content> Project_content
	{
		get
		{
			return this.GetTable<Project_content>();
		}
	}
	
	public System.Data.Linq.Table<Project_funds> Project_funds
	{
		get
		{
			return this.GetTable<Project_funds>();
		}
	}
	
	public System.Data.Linq.Table<Project_join> Project_join
	{
		get
		{
			return this.GetTable<Project_join>();
		}
	}
	
	public System.Data.Linq.Table<Project_review> Project_review
	{
		get
		{
			return this.GetTable<Project_review>();
		}
	}
	
	public System.Data.Linq.Table<Project_sort> Project_sort
	{
		get
		{
			return this.GetTable<Project_sort>();
		}
	}
	
	public System.Data.Linq.Table<Project_status> Project_status
	{
		get
		{
			return this.GetTable<Project_status>();
		}
	}
	
	public System.Data.Linq.Table<Status> Status
	{
		get
		{
			return this.GetTable<Status>();
		}
	}
	
	public System.Data.Linq.Table<UserInfo> UserInfo
	{
		get
		{
			return this.GetTable<UserInfo>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Picture")]
public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _pic_name;
	
	private string _pic_url;
	
	private string _pic_state;
	
	private EntitySet<UserInfo> _UserInfo;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpic_nameChanging(string value);
    partial void Onpic_nameChanged();
    partial void Onpic_urlChanging(string value);
    partial void Onpic_urlChanged();
    partial void Onpic_stateChanging(string value);
    partial void Onpic_stateChanged();
    #endregion
	
	public Picture()
	{
		this._UserInfo = new EntitySet<UserInfo>(new Action<UserInfo>(this.attach_UserInfo), new Action<UserInfo>(this.detach_UserInfo));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pic_name
	{
		get
		{
			return this._pic_name;
		}
		set
		{
			if ((this._pic_name != value))
			{
				this.Onpic_nameChanging(value);
				this.SendPropertyChanging();
				this._pic_name = value;
				this.SendPropertyChanged("pic_name");
				this.Onpic_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic_url", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string pic_url
	{
		get
		{
			return this._pic_url;
		}
		set
		{
			if ((this._pic_url != value))
			{
				this.Onpic_urlChanging(value);
				this.SendPropertyChanging();
				this._pic_url = value;
				this.SendPropertyChanged("pic_url");
				this.Onpic_urlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pic_state", DbType="VarChar(50)")]
	public string pic_state
	{
		get
		{
			return this._pic_state;
		}
		set
		{
			if ((this._pic_state != value))
			{
				this.Onpic_stateChanging(value);
				this.SendPropertyChanging();
				this._pic_state = value;
				this.SendPropertyChanged("pic_state");
				this.Onpic_stateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Picture_UserInfo", Storage="_UserInfo", ThisKey="id", OtherKey="img_id")]
	public EntitySet<UserInfo> UserInfo
	{
		get
		{
			return this._UserInfo;
		}
		set
		{
			this._UserInfo.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_UserInfo(UserInfo entity)
	{
		this.SendPropertyChanging();
		entity.Picture = this;
	}
	
	private void detach_UserInfo(UserInfo entity)
	{
		this.SendPropertyChanging();
		entity.Picture = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private System.Nullable<System.DateTime> _time;
	
	private System.DateTime _create_time;
	
	private string _password;
	
	private EntitySet<Project_content> _Project_content;
	
	private EntitySet<Project_join> _Project_join;
	
	private EntitySet<Project_review> _Project_review;
	
	private EntitySet<Status> _Status;
	
	private EntitySet<UserInfo> _UserInfo;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntimeChanging(System.Nullable<System.DateTime> value);
    partial void OntimeChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
	
	public Users()
	{
		this._Project_content = new EntitySet<Project_content>(new Action<Project_content>(this.attach_Project_content), new Action<Project_content>(this.detach_Project_content));
		this._Project_join = new EntitySet<Project_join>(new Action<Project_join>(this.attach_Project_join), new Action<Project_join>(this.detach_Project_join));
		this._Project_review = new EntitySet<Project_review>(new Action<Project_review>(this.attach_Project_review), new Action<Project_review>(this.detach_Project_review));
		this._Status = new EntitySet<Status>(new Action<Status>(this.attach_Status), new Action<Status>(this.detach_Status));
		this._UserInfo = new EntitySet<UserInfo>(new Action<UserInfo>(this.attach_UserInfo), new Action<UserInfo>(this.detach_UserInfo));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime")]
	public System.Nullable<System.DateTime> time
	{
		get
		{
			return this._time;
		}
		set
		{
			if ((this._time != value))
			{
				this.OntimeChanging(value);
				this.SendPropertyChanging();
				this._time = value;
				this.SendPropertyChanged("time");
				this.OntimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
	public System.DateTime create_time
	{
		get
		{
			return this._create_time;
		}
		set
		{
			if ((this._create_time != value))
			{
				this.Oncreate_timeChanging(value);
				this.SendPropertyChanging();
				this._create_time = value;
				this.SendPropertyChanged("create_time");
				this.Oncreate_timeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project_content", Storage="_Project_content", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Project_content> Project_content
	{
		get
		{
			return this._Project_content;
		}
		set
		{
			this._Project_content.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project_join", Storage="_Project_join", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Project_join> Project_join
	{
		get
		{
			return this._Project_join;
		}
		set
		{
			this._Project_join.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project_review", Storage="_Project_review", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Project_review> Project_review
	{
		get
		{
			return this._Project_review;
		}
		set
		{
			this._Project_review.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Status", Storage="_Status", ThisKey="id", OtherKey="user_id")]
	public EntitySet<Status> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			this._Status.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserInfo", Storage="_UserInfo", ThisKey="id", OtherKey="user_id")]
	public EntitySet<UserInfo> UserInfo
	{
		get
		{
			return this._UserInfo;
		}
		set
		{
			this._UserInfo.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Project_content(Project_content entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Project_content(Project_content entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
	
	private void attach_Project_join(Project_join entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Project_join(Project_join entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
	
	private void attach_Project_review(Project_review entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Project_review(Project_review entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
	
	private void attach_Status(Status entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Status(Status entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
	
	private void attach_UserInfo(UserInfo entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_UserInfo(UserInfo entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_content")]
public partial class Project_content : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _user_id;
	
	private string _projectname;
	
	private System.DateTime _time_start;
	
	private System.Nullable<System.DateTime> _time_end;
	
	private string _title;
	
	private string _content;
	
	private string _sort;
	
	private string _files;
	
	private string _summary;
	
	private EntitySet<Project_funds> _Project_funds;
	
	private EntitySet<Project_join> _Project_join;
	
	private EntitySet<Project_review> _Project_review;
	
	private EntitySet<Project_sort> _Project_sort;
	
	private EntitySet<Project_status> _Project_status;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnprojectnameChanging(string value);
    partial void OnprojectnameChanged();
    partial void Ontime_startChanging(System.DateTime value);
    partial void Ontime_startChanged();
    partial void Ontime_endChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_endChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnsortChanging(string value);
    partial void OnsortChanged();
    partial void OnfilesChanging(string value);
    partial void OnfilesChanged();
    partial void OnsummaryChanging(string value);
    partial void OnsummaryChanged();
    #endregion
	
	public Project_content()
	{
		this._Project_funds = new EntitySet<Project_funds>(new Action<Project_funds>(this.attach_Project_funds), new Action<Project_funds>(this.detach_Project_funds));
		this._Project_join = new EntitySet<Project_join>(new Action<Project_join>(this.attach_Project_join), new Action<Project_join>(this.detach_Project_join));
		this._Project_review = new EntitySet<Project_review>(new Action<Project_review>(this.attach_Project_review), new Action<Project_review>(this.detach_Project_review));
		this._Project_sort = new EntitySet<Project_sort>(new Action<Project_sort>(this.attach_Project_sort), new Action<Project_sort>(this.detach_Project_sort));
		this._Project_status = new EntitySet<Project_status>(new Action<Project_status>(this.attach_Project_status), new Action<Project_status>(this.detach_Project_status));
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string projectname
	{
		get
		{
			return this._projectname;
		}
		set
		{
			if ((this._projectname != value))
			{
				this.OnprojectnameChanging(value);
				this.SendPropertyChanging();
				this._projectname = value;
				this.SendPropertyChanged("projectname");
				this.OnprojectnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_start", DbType="DateTime NOT NULL")]
	public System.DateTime time_start
	{
		get
		{
			return this._time_start;
		}
		set
		{
			if ((this._time_start != value))
			{
				this.Ontime_startChanging(value);
				this.SendPropertyChanging();
				this._time_start = value;
				this.SendPropertyChanged("time_start");
				this.Ontime_startChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_end", DbType="DateTime")]
	public System.Nullable<System.DateTime> time_end
	{
		get
		{
			return this._time_end;
		}
		set
		{
			if ((this._time_end != value))
			{
				this.Ontime_endChanging(value);
				this.SendPropertyChanging();
				this._time_end = value;
				this.SendPropertyChanged("time_end");
				this.Ontime_endChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string title
	{
		get
		{
			return this._title;
		}
		set
		{
			if ((this._title != value))
			{
				this.OntitleChanging(value);
				this.SendPropertyChanging();
				this._title = value;
				this.SendPropertyChanged("title");
				this.OntitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="VarChar(100)")]
	public string sort
	{
		get
		{
			return this._sort;
		}
		set
		{
			if ((this._sort != value))
			{
				this.OnsortChanging(value);
				this.SendPropertyChanging();
				this._sort = value;
				this.SendPropertyChanged("sort");
				this.OnsortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_files", DbType="VarChar(100)")]
	public string files
	{
		get
		{
			return this._files;
		}
		set
		{
			if ((this._files != value))
			{
				this.OnfilesChanging(value);
				this.SendPropertyChanging();
				this._files = value;
				this.SendPropertyChanged("files");
				this.OnfilesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summary", DbType="NVarChar(150)")]
	public string summary
	{
		get
		{
			return this._summary;
		}
		set
		{
			if ((this._summary != value))
			{
				this.OnsummaryChanging(value);
				this.SendPropertyChanging();
				this._summary = value;
				this.SendPropertyChanged("summary");
				this.OnsummaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_funds", Storage="_Project_funds", ThisKey="id", OtherKey="project_id")]
	public EntitySet<Project_funds> Project_funds
	{
		get
		{
			return this._Project_funds;
		}
		set
		{
			this._Project_funds.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_join", Storage="_Project_join", ThisKey="id", OtherKey="project_id")]
	public EntitySet<Project_join> Project_join
	{
		get
		{
			return this._Project_join;
		}
		set
		{
			this._Project_join.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_review", Storage="_Project_review", ThisKey="id", OtherKey="project_id")]
	public EntitySet<Project_review> Project_review
	{
		get
		{
			return this._Project_review;
		}
		set
		{
			this._Project_review.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_sort", Storage="_Project_sort", ThisKey="id", OtherKey="project_id")]
	public EntitySet<Project_sort> Project_sort
	{
		get
		{
			return this._Project_sort;
		}
		set
		{
			this._Project_sort.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_status", Storage="_Project_status", ThisKey="id", OtherKey="project_id")]
	public EntitySet<Project_status> Project_status
	{
		get
		{
			return this._Project_status;
		}
		set
		{
			this._Project_status.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project_content", Storage="_Users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Project_content.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Project_content.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Project_funds(Project_funds entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = this;
	}
	
	private void detach_Project_funds(Project_funds entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = null;
	}
	
	private void attach_Project_join(Project_join entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = this;
	}
	
	private void detach_Project_join(Project_join entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = null;
	}
	
	private void attach_Project_review(Project_review entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = this;
	}
	
	private void detach_Project_review(Project_review entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = null;
	}
	
	private void attach_Project_sort(Project_sort entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = this;
	}
	
	private void detach_Project_sort(Project_sort entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = null;
	}
	
	private void attach_Project_status(Project_status entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = this;
	}
	
	private void detach_Project_status(Project_status entity)
	{
		this.SendPropertyChanging();
		entity.Project_content = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_funds")]
public partial class Project_funds : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _project_id;
	
	private int _funds_limit;
	
	private int _funds_now;
	
	private System.Nullable<int> _funds_begin;
	
	private EntityRef<Project_content> _Project_content;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void Onfunds_limitChanging(int value);
    partial void Onfunds_limitChanged();
    partial void Onfunds_nowChanging(int value);
    partial void Onfunds_nowChanged();
    partial void Onfunds_beginChanging(System.Nullable<int> value);
    partial void Onfunds_beginChanged();
    #endregion
	
	public Project_funds()
	{
		this._Project_content = default(EntityRef<Project_content>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
	public int project_id
	{
		get
		{
			return this._project_id;
		}
		set
		{
			if ((this._project_id != value))
			{
				if (this._Project_content.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproject_idChanging(value);
				this.SendPropertyChanging();
				this._project_id = value;
				this.SendPropertyChanged("project_id");
				this.Onproject_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funds_limit", DbType="Int NOT NULL")]
	public int funds_limit
	{
		get
		{
			return this._funds_limit;
		}
		set
		{
			if ((this._funds_limit != value))
			{
				this.Onfunds_limitChanging(value);
				this.SendPropertyChanging();
				this._funds_limit = value;
				this.SendPropertyChanged("funds_limit");
				this.Onfunds_limitChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funds_now", DbType="Int NOT NULL")]
	public int funds_now
	{
		get
		{
			return this._funds_now;
		}
		set
		{
			if ((this._funds_now != value))
			{
				this.Onfunds_nowChanging(value);
				this.SendPropertyChanging();
				this._funds_now = value;
				this.SendPropertyChanged("funds_now");
				this.Onfunds_nowChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funds_begin", DbType="Int")]
	public System.Nullable<int> funds_begin
	{
		get
		{
			return this._funds_begin;
		}
		set
		{
			if ((this._funds_begin != value))
			{
				this.Onfunds_beginChanging(value);
				this.SendPropertyChanging();
				this._funds_begin = value;
				this.SendPropertyChanged("funds_begin");
				this.Onfunds_beginChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_funds", Storage="_Project_content", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
	public Project_content Project_content
	{
		get
		{
			return this._Project_content.Entity;
		}
		set
		{
			Project_content previousValue = this._Project_content.Entity;
			if (((previousValue != value) 
						|| (this._Project_content.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project_content.Entity = null;
					previousValue.Project_funds.Remove(this);
				}
				this._Project_content.Entity = value;
				if ((value != null))
				{
					value.Project_funds.Add(this);
					this._project_id = value.id;
				}
				else
				{
					this._project_id = default(int);
				}
				this.SendPropertyChanged("Project_content");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_join")]
public partial class Project_join : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _project_id;
	
	private int _user_id;
	
	private System.Nullable<int> _funds;
	
	private EntityRef<Project_content> _Project_content;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnfundsChanging(System.Nullable<int> value);
    partial void OnfundsChanged();
    #endregion
	
	public Project_join()
	{
		this._Project_content = default(EntityRef<Project_content>);
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
	public int project_id
	{
		get
		{
			return this._project_id;
		}
		set
		{
			if ((this._project_id != value))
			{
				if (this._Project_content.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproject_idChanging(value);
				this.SendPropertyChanging();
				this._project_id = value;
				this.SendPropertyChanged("project_id");
				this.Onproject_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funds", DbType="Int")]
	public System.Nullable<int> funds
	{
		get
		{
			return this._funds;
		}
		set
		{
			if ((this._funds != value))
			{
				this.OnfundsChanging(value);
				this.SendPropertyChanging();
				this._funds = value;
				this.SendPropertyChanged("funds");
				this.OnfundsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_join", Storage="_Project_content", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
	public Project_content Project_content
	{
		get
		{
			return this._Project_content.Entity;
		}
		set
		{
			Project_content previousValue = this._Project_content.Entity;
			if (((previousValue != value) 
						|| (this._Project_content.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project_content.Entity = null;
					previousValue.Project_join.Remove(this);
				}
				this._Project_content.Entity = value;
				if ((value != null))
				{
					value.Project_join.Add(this);
					this._project_id = value.id;
				}
				else
				{
					this._project_id = default(int);
				}
				this.SendPropertyChanged("Project_content");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project_join", Storage="_Users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Project_join.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Project_join.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_review")]
public partial class Project_review : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _project_id;
	
	private int _user_id;
	
	private System.DateTime _time;
	
	private string _content;
	
	private System.Nullable<int> _status;
	
	private EntityRef<Project_content> _Project_content;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
	
	public Project_review()
	{
		this._Project_content = default(EntityRef<Project_content>);
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
	public int project_id
	{
		get
		{
			return this._project_id;
		}
		set
		{
			if ((this._project_id != value))
			{
				if (this._Project_content.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproject_idChanging(value);
				this.SendPropertyChanging();
				this._project_id = value;
				this.SendPropertyChanged("project_id");
				this.Onproject_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
	public System.DateTime time
	{
		get
		{
			return this._time;
		}
		set
		{
			if ((this._time != value))
			{
				this.OntimeChanging(value);
				this.SendPropertyChanging();
				this._time = value;
				this.SendPropertyChanged("time");
				this.OntimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
	public System.Nullable<int> status
	{
		get
		{
			return this._status;
		}
		set
		{
			if ((this._status != value))
			{
				this.OnstatusChanging(value);
				this.SendPropertyChanging();
				this._status = value;
				this.SendPropertyChanged("status");
				this.OnstatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_review", Storage="_Project_content", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
	public Project_content Project_content
	{
		get
		{
			return this._Project_content.Entity;
		}
		set
		{
			Project_content previousValue = this._Project_content.Entity;
			if (((previousValue != value) 
						|| (this._Project_content.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project_content.Entity = null;
					previousValue.Project_review.Remove(this);
				}
				this._Project_content.Entity = value;
				if ((value != null))
				{
					value.Project_review.Add(this);
					this._project_id = value.id;
				}
				else
				{
					this._project_id = default(int);
				}
				this.SendPropertyChanged("Project_content");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Project_review", Storage="_Users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Project_review.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Project_review.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_sort")]
public partial class Project_sort : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _project_id;
	
	private string _sort;
	
	private EntityRef<Project_content> _Project_content;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void OnsortChanging(string value);
    partial void OnsortChanged();
    #endregion
	
	public Project_sort()
	{
		this._Project_content = default(EntityRef<Project_content>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
	public int project_id
	{
		get
		{
			return this._project_id;
		}
		set
		{
			if ((this._project_id != value))
			{
				if (this._Project_content.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproject_idChanging(value);
				this.SendPropertyChanging();
				this._project_id = value;
				this.SendPropertyChanged("project_id");
				this.Onproject_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sort", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string sort
	{
		get
		{
			return this._sort;
		}
		set
		{
			if ((this._sort != value))
			{
				this.OnsortChanging(value);
				this.SendPropertyChanging();
				this._sort = value;
				this.SendPropertyChanged("sort");
				this.OnsortChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_sort", Storage="_Project_content", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
	public Project_content Project_content
	{
		get
		{
			return this._Project_content.Entity;
		}
		set
		{
			Project_content previousValue = this._Project_content.Entity;
			if (((previousValue != value) 
						|| (this._Project_content.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project_content.Entity = null;
					previousValue.Project_sort.Remove(this);
				}
				this._Project_content.Entity = value;
				if ((value != null))
				{
					value.Project_sort.Add(this);
					this._project_id = value.id;
				}
				else
				{
					this._project_id = default(int);
				}
				this.SendPropertyChanged("Project_content");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Project_status")]
public partial class Project_status : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _project_id;
	
	private string _content;
	
	private string _project_status1;
	
	private EntityRef<Project_content> _Project_content;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproject_idChanging(int value);
    partial void Onproject_idChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void Onproject_status1Changing(string value);
    partial void Onproject_status1Changed();
    #endregion
	
	public Project_status()
	{
		this._Project_content = default(EntityRef<Project_content>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_project_id", DbType="Int NOT NULL")]
	public int project_id
	{
		get
		{
			return this._project_id;
		}
		set
		{
			if ((this._project_id != value))
			{
				if (this._Project_content.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onproject_idChanging(value);
				this.SendPropertyChanging();
				this._project_id = value;
				this.SendPropertyChanged("project_id");
				this.Onproject_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string content
	{
		get
		{
			return this._content;
		}
		set
		{
			if ((this._content != value))
			{
				this.OncontentChanging(value);
				this.SendPropertyChanging();
				this._content = value;
				this.SendPropertyChanged("content");
				this.OncontentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="project_status", Storage="_project_status1", DbType="NVarChar(50)")]
	public string project_status1
	{
		get
		{
			return this._project_status1;
		}
		set
		{
			if ((this._project_status1 != value))
			{
				this.Onproject_status1Changing(value);
				this.SendPropertyChanging();
				this._project_status1 = value;
				this.SendPropertyChanged("project_status1");
				this.Onproject_status1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_content_Project_status", Storage="_Project_content", ThisKey="project_id", OtherKey="id", IsForeignKey=true)]
	public Project_content Project_content
	{
		get
		{
			return this._Project_content.Entity;
		}
		set
		{
			Project_content previousValue = this._Project_content.Entity;
			if (((previousValue != value) 
						|| (this._Project_content.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Project_content.Entity = null;
					previousValue.Project_status.Remove(this);
				}
				this._Project_content.Entity = value;
				if ((value != null))
				{
					value.Project_status.Add(this);
					this._project_id = value.id;
				}
				else
				{
					this._project_id = default(int);
				}
				this.SendPropertyChanged("Project_content");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status")]
public partial class Status : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _user_id;
	
	private string _status_name;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onstatus_nameChanging(string value);
    partial void Onstatus_nameChanged();
    #endregion
	
	public Status()
	{
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_name", DbType="NVarChar(10)")]
	public string status_name
	{
		get
		{
			return this._status_name;
		}
		set
		{
			if ((this._status_name != value))
			{
				this.Onstatus_nameChanging(value);
				this.SendPropertyChanging();
				this._status_name = value;
				this.SendPropertyChanged("status_name");
				this.Onstatus_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Status", Storage="_Users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Status.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Status.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInfo")]
public partial class UserInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private int _user_id;
	
	private int _img_id;
	
	private string _username;
	
	private string _name;
	
	private string _email;
	
	private string _address;
	
	private string _phone;
	
	private string _ID_Card;
	
	private System.Nullable<int> _funds;
	
	private EntityRef<Picture> _Picture;
	
	private EntityRef<Users> _Users;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onimg_idChanging(int value);
    partial void Onimg_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnID_CardChanging(string value);
    partial void OnID_CardChanged();
    partial void OnfundsChanging(System.Nullable<int> value);
    partial void OnfundsChanged();
    #endregion
	
	public UserInfo()
	{
		this._Picture = default(EntityRef<Picture>);
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
	public int user_id
	{
		get
		{
			return this._user_id;
		}
		set
		{
			if ((this._user_id != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onuser_idChanging(value);
				this.SendPropertyChanging();
				this._user_id = value;
				this.SendPropertyChanged("user_id");
				this.Onuser_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_id", DbType="Int NOT NULL")]
	public int img_id
	{
		get
		{
			return this._img_id;
		}
		set
		{
			if ((this._img_id != value))
			{
				if (this._Picture.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onimg_idChanging(value);
				this.SendPropertyChanging();
				this._img_id = value;
				this.SendPropertyChanged("img_id");
				this.Onimg_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string username
	{
		get
		{
			return this._username;
		}
		set
		{
			if ((this._username != value))
			{
				this.OnusernameChanging(value);
				this.SendPropertyChanging();
				this._username = value;
				this.SendPropertyChanged("username");
				this.OnusernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
	public string name
	{
		get
		{
			return this._name;
		}
		set
		{
			if ((this._name != value))
			{
				this.OnnameChanging(value);
				this.SendPropertyChanging();
				this._name = value;
				this.SendPropertyChanged("name");
				this.OnnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(150)")]
	public string address
	{
		get
		{
			return this._address;
		}
		set
		{
			if ((this._address != value))
			{
				this.OnaddressChanging(value);
				this.SendPropertyChanging();
				this._address = value;
				this.SendPropertyChanged("address");
				this.OnaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string phone
	{
		get
		{
			return this._phone;
		}
		set
		{
			if ((this._phone != value))
			{
				this.OnphoneChanging(value);
				this.SendPropertyChanging();
				this._phone = value;
				this.SendPropertyChanged("phone");
				this.OnphoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Card", DbType="VarChar(20)")]
	public string ID_Card
	{
		get
		{
			return this._ID_Card;
		}
		set
		{
			if ((this._ID_Card != value))
			{
				this.OnID_CardChanging(value);
				this.SendPropertyChanging();
				this._ID_Card = value;
				this.SendPropertyChanged("ID_Card");
				this.OnID_CardChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_funds", DbType="Int")]
	public System.Nullable<int> funds
	{
		get
		{
			return this._funds;
		}
		set
		{
			if ((this._funds != value))
			{
				this.OnfundsChanging(value);
				this.SendPropertyChanging();
				this._funds = value;
				this.SendPropertyChanged("funds");
				this.OnfundsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Picture_UserInfo", Storage="_Picture", ThisKey="img_id", OtherKey="id", IsForeignKey=true)]
	public Picture Picture
	{
		get
		{
			return this._Picture.Entity;
		}
		set
		{
			Picture previousValue = this._Picture.Entity;
			if (((previousValue != value) 
						|| (this._Picture.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Picture.Entity = null;
					previousValue.UserInfo.Remove(this);
				}
				this._Picture.Entity = value;
				if ((value != null))
				{
					value.UserInfo.Add(this);
					this._img_id = value.id;
				}
				else
				{
					this._img_id = default(int);
				}
				this.SendPropertyChanged("Picture");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_UserInfo", Storage="_Users", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.UserInfo.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.UserInfo.Add(this);
					this._user_id = value.id;
				}
				else
				{
					this._user_id = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
